---
import { getRelativeLocaleUrl } from "astro:i18n";
import { getEntry } from "astro:content";
import EventLayout from "$layouts/EventLayout.astro";

export const prerender = false;

const { slug } = Astro.params;
if (!slug) throw new Error("Slug is required");

const entry = await getEntry("events", slug);
if (!entry) return Astro.redirect("/404");

const { render, data } = entry;

const translations = Object.entries(
  import.meta.glob("/translations/events/**/*.json", { eager: true }),
).map(([path, resource]) => {
  const [_, _translations, _events, lang, event] = path.split("/");
  return {
    lang,
    event: event.replace(".json", ""),
    resource,
  };
});
const availableLangs = translations.filter((t) => t.event === slug).map((t) => t.lang);

if (
  Astro.preferredLocale !== undefined &&
  Astro.preferredLocale !== "en" &&
  availableLangs.includes(Astro.preferredLocale)
) {
  const path = getRelativeLocaleUrl(Astro.preferredLocale, `events/${slug}`);
  path; // Suppress TS error since it doesnt recognise astro top-level return magic
  return Astro.redirect(path);
}

const { Content } = await render();
---

<EventLayout {...data}>
  <div class="prose contents">
    <Content />
  </div>
</EventLayout>
